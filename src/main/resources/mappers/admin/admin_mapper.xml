<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ss.cinema.mappers.adminMapper">
	<!-- addMovie.jsp -->

	<!-- 영화 추가 -->
	<insert id="addMovie" parameterType="com.ss.cinema.dto.movieDTO">
		INSERT INTO MOVIE (
		MOVIE_TITLE, MOVIE_START_DATE, MOVIE_END_DATE, MOVIE_DIRECTOR,
		MOVIE_ACTOR, MOVIE_GENRE, MOVIE_AGE_LIMIT, MOVIE_SHOWTIME,
		MOVIE_NATIONALITY, MOVIE_SUMMARY, MOVIE_IMAGE, MOVIE_IMAGE2, MOVIE_IMAGE3, MOVIE_TRAILER
		) VALUES (
		#{movieTitle}, #{movieStartDate}, #{movieEndDate},
		#{movieDirector}, #{movieActor}, #{movieGenre}, #{movieAgeLimit}, #{movieShowtime},
		#{movieNationality}, #{movieSummary},
		#{movieImage},#{movieImage2},#{movieImage3}, #{movieTrailer}
		)
	</insert>
	<!--movielist 영화 삭제 -->
	<delete id="deleteMovie" parameterType="int">
		DELETE FROM MOVIE WHERE MOVIE_NO = #{movieNo}
	</delete>
	<!-- editmovie 영화 정보 가져오기 -->
	<select id="getMovieById" parameterType="int"
		resultMap="movieMap">
		SELECT
		MOVIE_NO AS movieNo,
		MOVIE_TITLE AS movieTitle,
		TO_CHAR(MOVIE_START_DATE, 'YYYY-MM-DD') AS movieStartDate,
		TO_CHAR(MOVIE_END_DATE, 'YYYY-MM-DD') AS movieEndDate,
		MOVIE_DIRECTOR AS movieDirector,
		MOVIE_ACTOR AS movieActor,
		MOVIE_GENRE AS movieGenre,
		MOVIE_AGE_LIMIT AS movieAgeLimit,
		MOVIE_SHOWTIME AS movieShowtime,
		MOVIE_NATIONALITY AS movieNationality,
		MOVIE_SUMMARY AS movieSummary,
		MOVIE_IMAGE AS movieImage,
		MOVIE_IMAGE2 AS movieImage2,
		MOVIE_IMAGE3 AS movieImage3,
		MOVIE_TRAILER AS movieTrailer
		FROM MOVIE
		WHERE MOVIE_NO = #{movieNo}
	</select>
	<!--editmovie 영화 수정 -->
	<update id="updateMovie"
		parameterType="com.ss.cinema.dto.movieDTO">
		UPDATE MOVIE
		<set>
			MOVIE_TITLE = #{movieTitle},
			MOVIE_START_DATE = #{movieStartDate},
			MOVIE_END_DATE = #{movieEndDate},
			MOVIE_DIRECTOR = #{movieDirector},
			MOVIE_ACTOR = #{movieActor},
			MOVIE_GENRE = #{movieGenre},
			MOVIE_AGE_LIMIT = #{movieAgeLimit},
			MOVIE_SHOWTIME = #{movieShowtime},
			MOVIE_NATIONALITY = #{movieNationality},
			MOVIE_SUMMARY = #{movieSummary},
			<if test="movieImage != null and movieImage != ''">
				MOVIE_IMAGE = #{movieImage},
			</if>
			<if test="movieImage2 != null and movieImage2 != ''">
				MOVIE_IMAGE2 = #{movieImage2},
			</if>
			<if test="movieImage3 != null and movieImage3 != ''">
				MOVIE_IMAGE3 = #{movieImage3},
			</if>
			<if test="movieTrailer != null and movieTrailer != ''">
				MOVIE_TRAILER = #{movieTrailer}
			</if>
		</set>
		WHERE MOVIE_NO = #{movieNo}
	</update>


	<!-- 영화 제목 중복 체크 -->
	<select id="countByMovieTitle" resultType="int">
		SELECT COUNT(*) FROM
		MOVIE WHERE MOVIE_TITLE = #{movieTitle}
	</select>

	<!-- 영화 목록 페이징 조회 -->
	<select id="getMoviesWithLimit" resultMap="movieMap">
		SELECT *
		FROM movie
		ORDER BY MOVIE_NO
		OFFSET #{offset} ROWS
		FETCH NEXT #{limit} ROWS ONLY
	</select>

	<!-- 총 영화 개수 조회 -->
	<select id="countAllMovies" resultType="long">
		SELECT COUNT(*)
		FROM movie
	</select>


	<!-- addproduct.jsp -->
	<!-- Product -->
	<insert id="addProduct"
		parameterType="com.ss.cinema.dto.ProductDTO">
		INSERT INTO PRODUCT (
		PRODUCT_CODE, PRODUCT_PRICE, PRODUCT_NAME, PRODUCT_ORIGIN, PRODUCT_IMAGE
		) VALUES (
		#{productCode, jdbcType=VARCHAR},
		#{productPrice, jdbcType=INTEGER},
		#{productName, jdbcType=VARCHAR},
		#{productOrigin, jdbcType=VARCHAR},
		#{productImage, jdbcType=VARCHAR}
		)
	</insert>
	<select id="getAllProducts" resultMap="productMap">
		SELECT PRODUCT_NO, PRODUCT_CODE, PRODUCT_PRICE, PRODUCT_NAME,
		PRODUCT_ORIGIN, PRODUCT_IMAGE
		FROM PRODUCT
	</select>

	<delete id="deleteProduct" parameterType="int">
		DELETE FROM PRODUCT WHERE PRODUCT_NO = #{productId}
	</delete>
	<select id="getProductsWithLimit" resultMap="productMap">
    <![CDATA[
    SELECT * FROM (
        SELECT a.*, rownum AS rnum
        FROM (
            SELECT *
            FROM PRODUCT
            ORDER BY PRODUCT_NO
        ) a
        WHERE rownum <= #{offset} + #{limit}
    )
    WHERE rnum > #{offset}
    ]]>
	</select>

	<select id="countAllProducts" resultType="long">
		SELECT COUNT(*)
		FROM PRODUCT
	</select>





	<!-- addSchedul.jsp -->
	<!-- 영화 목록 조회: 영화 제목 가져오기 -->
	<select id="getAllMovies" resultMap="movieMap">
		SELECT *
		FROM MOVIE
	</select>
	<!-- 상영 시간표 추가 -->
	<insert id="addSchedule"
		parameterType="com.ss.cinema.dto.TheaterDTO">
		INSERT INTO THEATER (
		THEATER_START_TIME, THEATER_END_TIME, THEATER_NAME, THEATER_CINEMA_NO
		) VALUES (
		#{theaterStartTime, jdbcType=DATE}, #{theaterEndTime, jdbcType=DATE}, #{theaterName},
		#{theaterCinemaNo}
		)
	</insert>


	<!-- 모든 회원 정보 조회 SQL -->
	<select id="getAllMembers" resultMap="memberListMap">
		SELECT *
		FROM member
	</select>

	<!-- 페이징을 적용한 모든 회원 조회 (Oracle SQL) -->
	<select id="getAllMembersWithLimit" resultMap="memberListMap">
    <![CDATA[
    SELECT * FROM (
        SELECT a.*, ROWNUM rnum
        FROM (
            SELECT *
            FROM member
            ORDER BY MEMBER_ID
        ) a
        WHERE ROWNUM <= #{offset} + #{limit}
    )
    WHERE rnum > #{offset}
    ]]>
	</select>

	<select id="countAllMembers" resultType="long">
		SELECT COUNT(*)
		FROM member
	</select>

	<!-- 이름을 기준으로 회원 검색 (페이징 포함, Oracle SQL) -->
	<select id="searchMembersByName" resultMap="memberListMap">
    <![CDATA[
    SELECT * FROM (
        SELECT a.*, ROWNUM rnum
        FROM (
            SELECT *
            FROM member
            WHERE MEMBER_NAME LIKE '%' || #{name} || '%'
            ORDER BY MEMBER_ID
        ) a
        WHERE ROWNUM <= #{offset} + #{limit}
    )
    WHERE rnum > #{offset}
    ]]>
	</select>

	<select id="countMembersByName" resultType="long">
		SELECT COUNT(*)
		FROM member
		WHERE MEMBER_NAME LIKE '%' || #{name} || '%'
	</select>

	<select id="getMemberById" parameterType="long"
		resultMap="memberListMap">
		SELECT *
		FROM member
		WHERE MEMBER_ID = #{id}
	</select>

	<update id="updateMember">
		UPDATE member
		SET
		MEMBER_NAME = #{memberName},
		MEMBER_PASSWORD = #{memberPassword},
		MEMBER_GENDER = #{memberGender},
		MEMBER_JUMIN = #{memberJumin}, <!-- 여기 수정됨 -->
		MEMBER_PHONE = #{memberPhone},
		MEMBER_EMAIL = #{memberEmail},
		MEMBER_COUPON = #{memberCoupon},
		MEMBER_ADMIN =
		<choose>
			<when test="memberAdmin == true"> 'Y' </when>
			<otherwise> 'N' </otherwise>
		</choose>
		,
		MEMBER_STAMP = #{memberStamp}
		WHERE MEMBER_ID = #{memberId}
	</update>
	<delete id="deleteMember" parameterType="long">
		DELETE FROM member
		WHERE MEMBER_ID = #{id}
	</delete>



	<!-- addSchedule -->
    <!-- 모든 영화 리스트 가져오기 -->

<!-- 영화 상영 스케줄 추가 -->
<insert id="addCinema" useGeneratedKeys="true" keyProperty="cinemaNo" keyColumn="CINEMA_NO">
    INSERT INTO CINEMA (CINEMA_RLG, CINEMA_BLG, CINEMA_MOVIE_NO, CINEMA_SCREEN_DATE)
    VALUES (#{cinemaRLG}, #{cinemaBLG}, #{cinemaMovieNo}, #{cinemaScreenDate})
</insert>

<insert id="addTheater">
     INSERT INTO THEATER (THEATER_START_TIME, THEATER_END_TIME, THEATER_NAME, THEATER_CINEMA_NO)
    VALUES (
        #{theaterStartTime,jdbcType=TIMESTAMP}, 
        (
            SELECT #{theaterStartTime} + INTERVAL '1' MINUTE * MOVIE_SHOWTIME
            FROM MOVIE
            WHERE MOVIE_NO = (SELECT CINEMA_MOVIE_NO FROM CINEMA WHERE CINEMA_NO = #{theaterCinemaNo})
        ), 
        #{theaterName}, 
        #{theaterCinemaNo}
    )
</insert>

     <!-- 영화 상영 스케줄 조회 결과를 매핑할 resultMap 정의 -->
<resultMap id="movieScheduleResultMap2" type="com.ss.cinema.dto.TheaterDTO">
    <id property="theaterNo" column="THEATER_NO"/>
    <result property="theaterStartTime" column="THEATER_START_TIME"/>
    <result property="theaterEndTime" column="THEATER_END_TIME"/>
    <result property="theaterName" column="THEATER_NAME"/>
    <result property="revSeatCnt" column="REV_SEAT_CNT"/>
    
    <association property="cinema" javaType="com.ss.cinema.dto.CinemaDTO">
        <id property="cinemaNo" column="CINEMA_NO"/>
        <result property="cinemaRLG" column="CINEMA_RLG"/>
        <result property="cinemaBLG" column="CINEMA_BLG"/>
        <result property="cinemaScreenDate" column="CINEMA_SCREEN_DATE"/>
        <result property="cinemaMovieNo" column="CINEMA_MOVIE_NO"/>
    </association>
    
    <association property="movie" javaType="com.ss.cinema.dto.movieDTO">
        <id property="movieNo" column="MOVIE_NO"/>
        <result property="movieTitle" column="MOVIE_TITLE"/>
        <result property="movieStartDate" column="MOVIE_START_DATE"/>
        <result property="movieEndDate" column="MOVIE_END_DATE"/>
    </association>
</resultMap>
 
  <select id="getMovieScheduleDetails" resultMap="movieScheduleResultMap2">
    SELECT
        t.THEATER_NO,
        t.THEATER_START_TIME,
        t.THEATER_END_TIME,
        t.THEATER_NAME,
        c.CINEMA_NO,
        c.CINEMA_RLG,
        c.CINEMA_BLG,
        c.CINEMA_SCREEN_DATE,
        c.CINEMA_MOVIE_NO,
        m.MOVIE_NO,
        m.MOVIE_TITLE,
        m.MOVIE_START_DATE,
        m.MOVIE_END_DATE
    FROM
        THEATER t
    JOIN
        CINEMA c ON t.THEATER_CINEMA_NO = c.CINEMA_NO
    JOIN
        MOVIE m ON c.CINEMA_MOVIE_NO = m.MOVIE_NO
    WHERE
        (#{movieNo, jdbcType=INTEGER} IS NULL OR m.MOVIE_NO = #{movieNo, jdbcType=INTEGER}) AND
        (#{cinemaRLG, jdbcType=VARCHAR} IS NULL OR c.CINEMA_RLG = #{cinemaRLG, jdbcType=VARCHAR}) AND
        (#{cinemaBLG, jdbcType=VARCHAR} IS NULL OR c.CINEMA_BLG = #{cinemaBLG, jdbcType=VARCHAR}) AND
        (#{cinemaScreenDate, jdbcType=DATE} IS NULL OR c.CINEMA_SCREEN_DATE = #{cinemaScreenDate, jdbcType=DATE}) AND
        (#{theaterName, jdbcType=VARCHAR} IS NULL OR t.THEATER_NAME = #{theaterName, jdbcType=VARCHAR})
</select>



	<!-- Member ResultMap -->
	<resultMap type="MemberDTO" id="memberListMap">
		<id property="memberId" column="MEMBER_ID" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberPassword" column="MEMBER_PASSWORD" />
		<result property="memberGender" column="MEMBER_GENDER" />
		<result property="memberJumin" column="MEMBER_JUMIN" />
		<result property="memberPhone" column="MEMBER_PHONE" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberCoupon" column="MEMBER_COUPON" />
		<result property="memberAdmin" column="MEMBER_ADMIN" />
		<result property="memberStamp" column="MEMBER_STAMP" />
	</resultMap>

	<!-- movieDTO에 대한 resultMap 정의 -->
	<resultMap type="movieDTO" id="movieMap">
		<id property="movieNo" column="MOVIE_NO" />
		<result property="movieTitle" column="MOVIE_TITLE" />
		<result property="movieStartDate" column="MOVIE_START_DATE" />
		<result property="movieEndDate" column="MOVIE_END_DATE" />
		<result property="movieDirector" column="MOVIE_DIRECTOR" />
		<result property="movieActor" column="MOVIE_ACTOR" />
		<result property="movieGenre" column="MOVIE_GENRE" />
		<result property="movieAgeLimit" column="MOVIE_AGE_LIMIT" />
		<result property="movieShowtime" column="MOVIE_SHOWTIME" />
		<result property="movieNationality" column="MOVIE_NATIONALITY" />
		<result property="movieSummary" column="MOVIE_SUMMARY" />
		<result property="movieImage" column="MOVIE_IMAGE" />
		<result property="movieImage2" column="MOVIE_IMAGE2" />
		<result property="movieImage3" column="MOVIE_IMAGE3" />
		<result property="movieTrailer" column="MOVIE_TRAILER" />
	</resultMap>
	<!-- productDTO에 대한 resultMap 정의. -->
	<resultMap type="com.ss.cinema.dto.ProductDTO"
		id="productMap">
		<id property="productNo" column="PRODUCT_NO" />
		<result property="productCode" column="PRODUCT_CODE" />
		<result property="productPrice" column="PRODUCT_PRICE" />
		<result property="productName" column="PRODUCT_NAME" />
		<result property="productOrigin" column="PRODUCT_ORIGIN" />
		<result property="productImage" column="PRODUCT_IMAGE" />
	</resultMap>


	<!-- CinemaDTO에 대한 resultMap 정의 -->
	<resultMap type="CinemaDTO" id="cinemaMap">
		<id property="cinemaNo" column="CINEMA_NO" />
		<result property="cinemaRLG" column="CINEMA_RLG" />
		<result property="cinemaBLG" column="CINEMA_BLG" />
		<result property="cinemaMovieNo" column="CINEMA_MOVIE_NO" />
		<result property="cinemaScreenDate" column="CINEMA_SCREEN_DATE" />
	</resultMap>

	<!-- TheaterDTO에 대한 resultMap 정의 -->
	<resultMap type="TheaterDTO" id="theaterMap">
		<id property="theaterNo" column="THEATER_NO" />
		<result property="theaterStartTime" column="THEATER_START_TIME" />
		<result property="theaterEndTime" column="THEATER_END_TIME" />
		<result property="theaterName" column="THEATER_NAME" />
		<result property="theaterCinemaNo" column="THEATER_CINEMA_NO" />
		<result property="revSeatCnt" column="REV_SEAT_CNT" />
	</resultMap>

<resultMap id="movieScheduleResultMap" type="com.ss.cinema.dto.movieDTO">
    <!-- MovieDTO에 대한 매핑 -->
    <id property="movieNo" column="movieNo"/>
    <result property="movieTitle" column="movieTitle"/>
    <result property="movieStartDate" column="movieStartDate"/>
    <result property="movieEndDate" column="movieEndDate"/>
    <result property="movieDirector" column="movieDirector"/>
    <result property="movieActor" column="movieActor"/>
    <result property="movieGenre" column="movieGenre"/>
    <result property="movieAgeLimit" column="movieAgeLimit"/>
    <result property="movieShowtime" column="movieShowtime"/>
    <result property="movieNationality" column="movieNationality"/>
    <result property="movieSummary" column="movieSummary"/>
    <result property="movieImage" column="movieImage"/>
    <result property="movieImage2" column="movieImage2"/>
    <result property="movieImage3" column="movieImage3"/>
    <result property="movieTrailer" column="movieTrailer"/>
    
    <!-- CinemaDTO와 연관된 매핑 -->
    <association property="cinema" javaType="com.ss.cinema.dto.CinemaDTO">
        <id property="cinemaNo" column="cinemaNo"/>
        <result property="cinemaRLG" column="cinemaRLG"/>
        <result property="cinemaBLG" column="cinemaBLG"/>
        <result property="cinemaScreenDate" column="cinemaScreenDate"/>
    </association>

    <!-- TheaterDTO와 연관된 매핑 -->
    <association property="theater" javaType="com.ss.cinema.dto.TheaterDTO">
        <id property="theaterNo" column="theaterNo"/>
        <result property="theaterStartTime" column="theaterStartTime"/>
        <result property="theaterEndTime" column="theaterEndTime"/>
        <result property="theaterName" column="theaterName"/>
        <result property="revSeatCnt" column="revSeatCnt"/>
    </association>
</resultMap>
<delete id="deleteSchedule" parameterType="java.lang.Integer">
    DELETE FROM THEATER WHERE THEATER_NO = #{theaterNo}
</delete>

</mapper>




    <!-- 모든 회원 정보 조회 SQL 
    <select id="getAllMembers" resultMap="memberListMap">
        SELECT 
            MEMBER_ID,
            MEMBER_NAME,
            MEMBER_PASSWORD,
            MEMBER_GENDER,
            MEMBER_SOCIAL_SECURITY_NUM,
            MEMBER_PHONE,
            MEMBER_EMAIL,
            MEMBER_COUPON,
            MEMBER_ADMIN,
            MEMBER_STAMP
        FROM MEMBER
    </select> -->