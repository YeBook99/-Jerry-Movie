<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ss.cinema.mappers.adminMapper">

    <!-- Movie -->
    <insert id="addMovie" parameterType="com.ss.cinema.dto.movieDTO">
        INSERT INTO MOVIE (
            MOVIE_TITLE, MOVIE_START_DATE, MOVIE_END_DATE, MOVIE_DIRECTOR, 
            MOVIE_ACTOR, MOVIE_GENRE, MOVIE_AGE_LIMIT, MOVIE_SHOWTIME, 
            MOVIE_NATIONALITY, MOVIE_SUMMARY, MOVIE_IMAGE, MOVIE_TRAILER
        ) VALUES (
            #{movieTitle}, #{movieStartDate}, #{movieEndDate}, 
            #{movieDirector}, #{movieActor}, #{movieGenre}, #{movieAgeLimit}, #{movieShowtime}, 
            #{movieNationality}, #{movieSummary}, #{movieImage}, #{movieTrailer}
        )
    </insert>

    <!-- Product -->
    <insert id="addProduct" parameterType="com.ss.cinema.dto.ProductDTO">
        INSERT INTO PRODUCT (
            PRODUCT_PRICE, PRODUCT_NAME, PRODUCT_ORIGIN, PRODUCT_IMAGE
        ) VALUES (
            #{productPrice}, #{productName}, #{productOrigin}, #{productImage}
        )
    </insert>

    <!-- Member ResultMap -->
    <resultMap type="MemberDTO" id="memberListMap">
        <id property="memberId" column="MEMBER_ID"/>
        <result property="memberName" column="MEMBER_NAME"/>
        <result property="memberPassword" column="MEMBER_PASSWORD"/>
        <result property="memberGender" column="MEMBER_GENDER"/>
        <result property="memberJumin" column="MEMBER_JUMIN"/>
        <result property="memberPhone" column="MEMBER_PHONE"/>
        <result property="memberEmail" column="MEMBER_EMAIL"/>
        <result property="memberCoupon" column="MEMBER_COUPON"/>
        <result property="memberAdmin" column="MEMBER_ADMIN"/>
        <result property="memberStamp" column="MEMBER_STAMP"/>
    </resultMap>

    <!-- 모든 회원 정보 조회 SQL -->
    <select id="getAllMembers" resultMap="memberListMap">
        SELECT *
        FROM member
    </select>

    <!-- 페이징을 적용한 모든 회원 조회 (Oracle SQL) -->
    <select id="getAllMembersWithLimit" resultMap="memberListMap">
        <![CDATA[
        SELECT * FROM (
            SELECT a.*, rownum AS rnum
            FROM (
                SELECT *
                FROM member
                ORDER BY MEMBER_ID
            ) a
            WHERE rownum <= #{offset} + #{limit}
        )
        WHERE rnum > #{offset}
        ]]>
    </select>

    <select id="countAllMembers" resultType="long">
        SELECT COUNT(*)
        FROM member
    </select>

     <!-- 이름을 기준으로 회원 검색 (페이징 포함, Oracle SQL) -->
    <select id="searchMembersByName" resultMap="memberListMap">
      <![CDATA[   SELECT * FROM (
            SELECT a.*, ROWNUM rnum FROM (
                SELECT *
                FROM member
                WHERE MEMBER_NAME LIKE CONCAT('%', #{name}, '%')
                ORDER BY MEMBER_ID
            ) a
            WHERE ROWNUM <= #{offset} + #{limit}
        )
        WHERE rnum > #{offset}  ]]>
    </select>
    <select id="countMembersByName" resultType="long">
        SELECT COUNT(*)
        FROM member
        WHERE MEMBER_NAME LIKE CONCAT('%', #{name}, '%')
    </select>

    <select id="getMemberById" parameterType="long" resultMap="memberListMap">
        SELECT *
        FROM member
        WHERE MEMBER_ID = #{id}
    </select>

    <update id="updateMember">
        UPDATE member
        SET
            MEMBER_NAME = #{memberName},
            MEMBER_PASSWORD = #{memberPassword},
            MEMBER_GENDER = #{memberGender},
            MEMBER_JUMIN = #{memberJumin}, <!-- 여기 수정됨 -->
            MEMBER_PHONE = #{memberPhone},
            MEMBER_EMAIL = #{memberEmail},
            MEMBER_COUPON = #{memberCoupon},
            MEMBER_ADMIN = 
                <choose>
                    <when test="memberAdmin == true"> 'Y' </when>
                    <otherwise> 'N' </otherwise>
                </choose>,
            MEMBER_STAMP = #{memberStamp}
        WHERE MEMBER_ID = #{memberId}
    </update>
    <delete id="deleteMember" parameterType="long" >
        DELETE FROM member
        WHERE MEMBER_ID = #{id}
    </delete>

</mapper>




    <!-- 모든 회원 정보 조회 SQL 
    <select id="getAllMembers" resultMap="memberListMap">
        SELECT 
            MEMBER_ID,
            MEMBER_NAME,
            MEMBER_PASSWORD,
            MEMBER_GENDER,
            MEMBER_SOCIAL_SECURITY_NUM,
            MEMBER_PHONE,
            MEMBER_EMAIL,
            MEMBER_COUPON,
            MEMBER_ADMIN,
            MEMBER_STAMP
        FROM MEMBER
    </select> -->